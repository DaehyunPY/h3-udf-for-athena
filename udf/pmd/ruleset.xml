<?xml version="1.0"?>

<ruleset name="Custom Rules"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        My custom rules
    </description>


   <!-- Your rules will come here -->
   <rule ref="category/java/errorprone.xml/EmptyCatchBlock" />
   <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
   <rule ref="category/java/bestpractices.xml/AccessorClassGeneration" />
   <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration" />
   <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly" />
   <rule ref="category/java/bestpractices.xml/AvoidMessageDigestField" />
   <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
   <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
   <rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
   <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
   <rule ref="category/java/bestpractices.xml/CheckResultSet" />
   <rule ref="category/java/bestpractices.xml/ConstantsInInterface" />
   <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
   <rule ref="category/java/bestpractices.xml/DoubleBraceInitialization" />
   <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach" />
   <rule ref="category/java/bestpractices.xml/ForLoopVariableCount" />
   <rule ref="category/java/bestpractices.xml/GuardLogStatement" />
   <rule ref="category/java/bestpractices.xml/LooseCoupling" />
   <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray" />
   <rule ref="category/java/bestpractices.xml/MissingOverride" />
   <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine" />
   <rule ref="category/java/bestpractices.xml/PreserveStackTrace" />
   <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator" />
   <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap" />
   <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList" />
   <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
   <rule ref="category/java/bestpractices.xml/SystemPrintln" />
   <rule ref="category/java/bestpractices.xml/UnusedFormalParameter" />
   <rule ref="category/java/bestpractices.xml/UnusedPrivateField" />
   <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod" />
   <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
   <rule ref="category/java/bestpractices.xml/UseTryWithResources" />
   <rule ref="category/java/bestpractices.xml/UseVarargs" />
   <rule ref="category/java/bestpractices.xml/WhileLoopWithLiteralBoolean" />
   <rule ref="category/java/codestyle.xml/AtLeastOneConstructor" />
   <rule ref="category/java/codestyle.xml/AvoidDollarSigns" />
   <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
   <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
   <rule ref="category/java/codestyle.xml/BooleanGetMethodName" />
   <rule ref="category/java/codestyle.xml/CallSuperInConstructor" />
   <rule ref="category/java/codestyle.xml/ClassNamingConventions">
    <properties>
        <property name="classPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="abstractClassPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="interfacePattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="enumPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="annotationPattern" value="[A-Z][a-zA-Z0-9]*" />
        <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]*" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier" />
  <rule ref="category/java/codestyle.xml/ConfusingTernary" />
  <rule ref="category/java/codestyle.xml/ControlStatementBraces" />
  <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
  <rule ref="category/java/codestyle.xml/ExtendsObject" />
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass" />
  <rule ref="category/java/codestyle.xml/FieldNamingConventions">
    <properties>
        <property name="publicConstantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="constantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="enumConstantPattern" value="[A-Z][A-Z_0-9]*" />
        <property name="finalFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="staticFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="defaultFieldPattern" value="[a-z][a-zA-Z0-9]*" />
        <property name="exclusions" value="serialVersionUID|serialPersistentFields" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
  <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions" />
  <rule ref="category/java/codestyle.xml/GenericsNaming" />
  <rule ref="category/java/codestyle.xml/IdenticalCatchBranches" />
  <rule ref="category/java/codestyle.xml/LinguisticNaming">
    <properties>
        <property name="ignoredAnnotations" value="java.lang.Override" />
        <property name="checkBooleanMethod" value="true" />
        <property name="checkGetters" value="true" />
        <property name="checkSetters" value="true" />
        <property name="checkPrefixedTransformMethods" value="true" />
        <property name="checkTransformMethods" value="false" />
        <property name="booleanMethodPrefixes" value="is|has|can|have|will|should" />
        <property name="transformMethodNames" value="to|as" />
        <property name="checkFields" value="true" />
        <property name="checkVariables" value="true" />
        <property name="booleanFieldPrefixes" value="is|has|can|have|will|should" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal" />
  <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions" />
  <rule ref="category/java/codestyle.xml/LongVariable">
    <properties>
        <property name="minimum" value="17" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions">
    <properties>
        <property name="methodPattern" value="[a-z][_a-zA-Z0-9]*" />
        <property name="staticPattern" value="[a-z][_a-zA-Z0-9]*" />
        <property name="nativePattern" value="[a-z][_a-zA-Z0-9]*" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/NoPackage" />
  <rule ref="category/java/codestyle.xml/OnlyOneReturn" />
  <rule ref="category/java/codestyle.xml/PackageCase" />
  <rule ref="category/java/codestyle.xml/PrematureDeclaration" />
  <rule ref="category/java/codestyle.xml/ShortClassName" />
  <rule ref="category/java/codestyle.xml/ShortMethodName" />
  <rule ref="category/java/codestyle.xml/TooManyStaticImports" />
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor" />
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName" />
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier" />

  <rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
  <rule ref="category/java/codestyle.xml/UseDiamondOperator" />
  <rule ref="category/java/codestyle.xml/UselessParentheses" />
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis" />
  <rule ref="category/java/codestyle.xml/UseShortArrayInitializer" />
  <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
  <rule ref="category/java/design.xml/AvoidCatchingGenericException" />
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts" />
  <rule ref="category/java/design.xml/AvoidRethrowingException" />
  <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException" />
  <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
  <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes" />
  <rule ref="category/java/design.xml/AvoidUncheckedExceptionsInSignatures" /> 
  <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
  <rule ref="category/java/design.xml/CollapsibleIfStatements" />
  <rule ref="category/java/design.xml/CouplingBetweenObjects" />
  <rule ref="category/java/design.xml/DataClass" />
  <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
  <rule ref="category/java/design.xml/ExceptionAsFlowControl" />
  <rule ref="category/java/design.xml/ExcessiveClassLength">
    <properties>
        <property name="minimum" value="2000.0" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/ExcessiveImports" />
  <rule ref="category/java/design.xml/ExcessiveMethodLength" />
  <rule ref="category/java/design.xml/ExcessiveParameterList" />
  <rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
  <rule ref="category/java/design.xml/ExcessivePublicCount">
    <properties>
        <property name="minimum" value="145.0" />
    </properties>
  </rule>
  <rule ref="category/java/documentation.xml/CommentContent" />
  <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor" />
  <rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody" />
  <rule ref="category/java/errorprone.xml/AssignmentInOperand" />
  <rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic" />
  <rule ref="category/java/errorprone.xml/AvoidAccessibilityAlteration" />
  <rule ref="category/java/errorprone.xml/AvoidAssertAsIdentifier" />
  <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
  <rule ref="category/java/errorprone.xml/AvoidCallingFinalize" />
  <rule ref="category/java/errorprone.xml/AvoidCatchingNPE" />
  <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable" />
  <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
  <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals" />
  <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier" />
  <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName" />
  <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName" />
  <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause" />
  <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition" />
  <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation" />
  <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
  <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
  <rule ref="category/java/errorprone.xml/BrokenNullCheck" />
  <rule ref="category/java/errorprone.xml/CallSuperFirst" />
  <rule ref="category/java/errorprone.xml/CallSuperLast" />
  <rule ref="category/java/errorprone.xml/CheckSkipResult" />
  <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray" />
  <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic" />
  <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable" />
  <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName" />
  <rule ref="category/java/errorprone.xml/CloseResource" />
  <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
  <rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod" />
  <rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop" />
  <rule ref="category/java/errorprone.xml/EqualsNull" />
  <rule ref="category/java/errorprone.xml/IdempotentOperations" />
  <rule ref="category/java/errorprone.xml/InstantiationToGetClass" />
  <rule ref="category/java/errorprone.xml/InvalidLogMessageFormat" />
  <rule ref="category/java/errorprone.xml/JumbledIncrementer" />
  <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass" />
  <rule ref="category/java/errorprone.xml/MisplacedNullCheck" />
  <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass" />
  <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement" />
  <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
  <rule ref="category/java/errorprone.xml/ProperCloneImplementation" />
  <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
  <rule ref="category/java/errorprone.xml/UnconditionalIfStatement" />
  <rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion" />
  <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange" />
  <rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary" />
  <rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals" />
  <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings" />
  <rule ref="category/java/security.xml/HardCodedCryptoKey" />
  <rule ref="category/java/security.xml/InsecureCryptoIv" />
  <rule ref="category/java/performance.xml/AvoidArrayLoops" />
  
</ruleset>
